# Example for https://github.com/ThomasKaiser/Check_MK/blob/master/agents/plugins/netio
# Needs to be saved as /etc/check_mk/netio.cfg (ensure that it's only accessible by root!)
# 
# Requires XML API enabled on the Netio device with read-only access granted.
#
# The file contains one Netio device/socket combination per line followed by the hostname
# the consumption values should be piggybacked to. You can either use FQDN or IP addresses
# just ensure that the Netio device has the XML API enabled and FW is v3.1.3 (XmlVer=2.4)
# or higher. Read-only XML access needs to be enabled (and write access should remain 
# disabled since unless you own a PowerPDU 4C it's insecure HTTP – to switch outlets use
# neither XML nor URL API but a secured communications channel like SNMPv3, see Netio
# Application Note AN59: https://tinyurl.com/y6gwl3mm).
#
# In case anonymous read-only access is allowed the format is
#
#    device/socket hostname
# 
# If you set username/password, then the format is as follows:
#
#    user:password@device/socket hostname
#
# So to use the consumption information of socket 3 of a powerbox named 'netio-rack1'
# with username 'monitoring' and password 'secret' to be used for Check_MK host 'router'
# you would use
#
#    monitoring:secret@netio-rack1/3 router
#
# To check whether this will work as expected try this in a terminal before:
#
#    curl --user monitoring:secret http://netio-rack1/netio.xml
#
# With this config entry shortly after a new sensor 'Consumption' will appear on Check_MK
# node router and both actual/fluctuating as well as averaged consumption will be recorded.
#
# As a side note: only the first username:password pair per device will be used so in case
# there are mismatches in the config all that matters is the 1st occurence.
#
# There's one more specialty: if the hostname contains a comma then real hostname for
# piggyback operation is left from the comma and the sensor name (URL encoded in UTF-8)
# on the right. See example below. A Check_MK node called 'Haustechnik' gets a sensor
# called 'Klimagerät Süd' (building / 'AC unit south'). To URL encode use for example
#
#    perl -ple 's|([^\w=\-:@])|sprintf( "%%%02x", ord( $1))|ge' <<<"Klimagerät Süd"
#
# (your terminal needs a Unicode locale of course for this to work)
#
# Tresholds:
#
# This Check_MK plugin collects two consumption values per socket:
#
# * actual/fluctuating values (based on current readouts)
# * averaged values (based on Wh readouts of the last 60 min.)
#
# Reason is simple. By default Check_MK only reads from the powermeter every 60 seconds.
# In theory if consumption spikes happen in between those will be missing in recordings.
# That's why also the Wh values are processed since they include also short consumption
# spikes since the Netio device will constantly monitor cumulative consumption.
#
# The 'consumption' value exists to spot immediate consumption changes, the avg_consumption
# value is there to compare long-term changes. Since it uses averaged values over a longer
# timespan it will always lag behind real consumption behaviour by almost two hours with
# default settings (History=60).
#
# WARN/CRIT tresholds can optionally be provided per socket as two pairs:
#
# * WARN treshold for actual/fluctuating readouts
# * CRIT treshold for actual/fluctuating readouts
# * WARN treshold for averaged readouts
# * CRIT treshold for averaged readouts
#
# CRIT tresholds need to be higher than WARN and if only two tresholds are provided they
# are applied to both actual/fluctuating and averaged readouts.
#
# Examples:
#
# A small server called 'server' plugged into socket 3 of a Netio device 'netio-rack1'
# should generate WARN state if actual/fluctuating consumption exceeds 40W, this should
# turn into CRIT at 50W. Averaged readouts should trigger WARN at 15W and CRIT at 20W:
#
#    netio-rack1/3 server 40 50 15 20
#
# A firewall appliance called 'pfsense' plugged into socket 1 of a Netio device 'netio-ups'
# should only generate WARN/CRIT state changes for averaged readouts. Actual/fluctuating
# should be ignored. In this case 1st pair of tresholds needs to be set to really high
# values so consumption spikes get ignored. The following will result in state changing
# to WARN if 30W averaged consumption are exceeded and CRIT above 35W. Actual consumption
# peaks will be ignored since tresholds are set to 1000:
#
#    netio-ups/1 pfsense 1000 1000 30 35
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

powerbox-ups2.a-o.intern/1 gaia
powerbox-ups2.a-o.intern/2 jovian-jbod1
powerbox-ups2.a-o.intern/3 jovian-jbod2
powerbox-ups2.a-o.intern/4 jovian-head1
powerbox-ups3.a-o.intern/1 jovian-head2
powerbox-ups3.a-o.intern/2 hera
powerbox-ups3.a-o.intern/3 athene
powerbox-ups3.a-o.intern/4 Haustechnik,Klimager%c3%a4t%20S%c3%bcd 1000 1000 250 300
